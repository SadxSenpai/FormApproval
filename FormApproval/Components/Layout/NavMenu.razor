@* 
    Navigation menu used on all pages.
    - Injects CurrentUserStub so we can toggle the demo role (approver/submitter) at runtime.
    - Clicking the toggle refreshes the page to update role-dependent UI (like Approvals on the dashboard).
*@
@inject FormApproval.Services.CurrentUserStub UserStub
@inject NavigationManager Nav

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">FormApproval</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <div class="nav-item px-3">
            @* Dashboard lists submissions and, for approvers, items to review *@
            <NavLink class="nav-link" href="/dashboard" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        <div class="nav-item px-3">
            @* Page to create a new leave request *@
            <NavLink class="nav-link" href="/new">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> New Request
            </NavLink>
        </div>

        <div class="nav-item px-3">
            @* Demo-only toggle: switch between Submitter and Approver views *@
            <button class="btn btn-sm btn-outline-secondary" @onclick="ToggleRole">
                @(UserStub.IsApprover ? "Switch to Submitter" : "Switch to Approver")
            </button>
        </div>
    </nav>
</div>

@code {
    // Flip the mock role and force a refresh so role-based UI updates.
    private void ToggleRole()
    {
        UserStub.IsApprover = !UserStub.IsApprover;
        Nav.NavigateTo("/dashboard", true); // refresh to update UI/queues
    }
}